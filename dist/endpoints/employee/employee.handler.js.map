{"version":3,"file":"employee.handler.js","names":["_employee","require","_db","isValidBase64","base64String","base64Regex","test","getAllEmployeeDetailsHandler","req","res","employeeDetails","Employee","findAll","length","status","json","message","EMPLOYEE_DETAILS_NOT_FOUND","error","EMPLOYEE_DETAILS_GET_ERROR","exports","getEmployeeDetailsByIdHandler","id","params","findByPk","createEmployeeDetailsHandler","employee_Name","score","result","certificate","body","newEmployeeDetail","create","EMPLOYEE_DETAILS_CREATION_ERROR"],"sources":["../../../src/endpoints/employee/employee.handler.ts"],"sourcesContent":["import {\r\n    EndpointAuthType,\r\n    EndpointHandler,\r\n    EndpointRequestType\r\n} from 'node-server-engine';\r\nimport {\r\n    EMPLOYEE_DETAILS_CREATION_ERROR,\r\n    EMPLOYEE_DETAILS_GET_ERROR,\r\n    EMPLOYEE_DETAILS_NOT_FOUND\r\n} from './employee.const';\r\nimport { Employee } from 'db';\r\nimport { Response } from 'express';\r\n\r\nfunction isValidBase64(base64String: string): boolean {\r\n    // Regular expression to check if the string is a valid base64 image string (with a data URI scheme)\r\n    const base64Regex = /^data:image\\/(png);base64,/;\r\n    return base64Regex.test(base64String);\r\n}\r\n\r\nexport const getAllEmployeeDetailsHandler: EndpointHandler<EndpointAuthType> = async (\r\n    req: EndpointRequestType[EndpointAuthType],\r\n    res: Response\r\n): Promise<void> => {\r\n    try {\r\n\r\n        const employeeDetails = await Employee.findAll();\r\n\r\n        if (employeeDetails.length === 0) {\r\n            res.status(404).json({ message: EMPLOYEE_DETAILS_NOT_FOUND });\r\n            return;\r\n        }\r\n\r\n        res.status(200).json({ employeeDetails });\r\n    } catch (error) {\r\n        res.status(500).json({ message: EMPLOYEE_DETAILS_GET_ERROR, error });\r\n    }\r\n};\r\n\r\n\r\nexport const getEmployeeDetailsByIdHandler: EndpointHandler<EndpointAuthType> = async (\r\n    req: EndpointRequestType[EndpointAuthType],\r\n    res: Response\r\n): Promise<void> => {\r\n\r\n    const { id } = req.params;\r\n\r\n    try {\r\n\r\n        const employeeDetails = await Employee.findByPk(id);\r\n\r\n        if(!employeeDetails) {\r\n            res.status(400).json({ message: EMPLOYEE_DETAILS_NOT_FOUND });\r\n            return;\r\n        }\r\n\r\n        res.status(200).json({ employeeDetails });\r\n    } catch (error) {\r\n        res.status(500).json({ message: EMPLOYEE_DETAILS_GET_ERROR, error });\r\n    }\r\n};\r\n\r\n\r\n// Create a new course\r\nexport const createEmployeeDetailsHandler: EndpointHandler<EndpointAuthType.NONE> = async (\r\n    req: EndpointRequestType[EndpointAuthType.NONE],\r\n    res: Response\r\n): Promise<void> => {\r\n\r\n    const { employee_Name, score, result, certificate } = req.body;\r\n\r\n    // Validate base64 image format\r\n    if (!isValidBase64(certificate)) {\r\n        res.status(400).json({ message: 'Invalid base64 image format.' });\r\n        return;\r\n    }\r\n\r\n    try {\r\n\r\n        // Create the employee details\r\n        const newEmployeeDetail = await Employee.create({\r\n            employee_Name,\r\n            score,\r\n            result,\r\n            certificate\r\n        });\r\n\r\n        res.status(201).json({ message: 'Employee Details created successfully', newEmployeeDetail });\r\n    } catch (error) {\r\n        res.status(500).json({ message: EMPLOYEE_DETAILS_CREATION_ERROR, error });\r\n    }\r\n};\r\n"],"mappings":";;;;;;AAKA,IAAAA,SAAA,GAAAC,OAAA;AAKA,IAAAC,GAAA,GAAAD,OAAA;AAGA,SAASE,aAAaA,CAACC,YAAoB,EAAW;EAClD;EACA,MAAMC,WAAW,GAAG,4BAA4B;EAChD,OAAOA,WAAW,CAACC,IAAI,CAACF,YAAY,CAAC;AACzC;AAEO,MAAMG,4BAA+D,GAAG,MAAAA,CAC3EC,GAA0C,EAC1CC,GAAa,KACG;EAChB,IAAI;IAEA,MAAMC,eAAe,GAAG,MAAMC,YAAQ,CAACC,OAAO,CAAC,CAAC;IAEhD,IAAIF,eAAe,CAACG,MAAM,KAAK,CAAC,EAAE;MAC9BJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAEC;MAA2B,CAAC,CAAC;MAC7D;IACJ;IAEAR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEL;IAAgB,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZT,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEG,oCAA0B;MAAED;IAAM,CAAC,CAAC;EACxE;AACJ,CAAC;AAACE,OAAA,CAAAb,4BAAA,GAAAA,4BAAA;AAGK,MAAMc,6BAAgE,GAAG,MAAAA,CAC5Eb,GAA0C,EAC1CC,GAAa,KACG;EAEhB,MAAM;IAAEa;EAAG,CAAC,GAAGd,GAAG,CAACe,MAAM;EAEzB,IAAI;IAEA,MAAMb,eAAe,GAAG,MAAMC,YAAQ,CAACa,QAAQ,CAACF,EAAE,CAAC;IAEnD,IAAG,CAACZ,eAAe,EAAE;MACjBD,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAEC;MAA2B,CAAC,CAAC;MAC7D;IACJ;IAEAR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEL;IAAgB,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZT,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEG,oCAA0B;MAAED;IAAM,CAAC,CAAC;EACxE;AACJ,CAAC;;AAGD;AAAAE,OAAA,CAAAC,6BAAA,GAAAA,6BAAA;AACO,MAAMI,4BAAoE,GAAG,MAAAA,CAChFjB,GAA+C,EAC/CC,GAAa,KACG;EAEhB,MAAM;IAAEiB,aAAa;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGrB,GAAG,CAACsB,IAAI;;EAE9D;EACA,IAAI,CAAC3B,aAAa,CAAC0B,WAAW,CAAC,EAAE;IAC7BpB,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC;IACjE;EACJ;EAEA,IAAI;IAEA;IACA,MAAMe,iBAAiB,GAAG,MAAMpB,YAAQ,CAACqB,MAAM,CAAC;MAC5CN,aAAa;MACbC,KAAK;MACLC,MAAM;MACNC;IACJ,CAAC,CAAC;IAEFpB,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,uCAAuC;MAAEe;IAAkB,CAAC,CAAC;EACjG,CAAC,CAAC,OAAOb,KAAK,EAAE;IACZT,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEiB,yCAA+B;MAAEf;IAAM,CAAC,CAAC;EAC7E;AACJ,CAAC;AAACE,OAAA,CAAAK,4BAAA,GAAAA,4BAAA","ignoreList":[]}