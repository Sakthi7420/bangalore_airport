/class:
  get:
    summary: Get all classes
    description: Retrieves a list of all classes
    tags:
      - Class
    responses:
      200:
        description: List of classes
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  classTitle:
                    type: string
                  classDescription:
                    type: string
                  classRecordedLink:
                    type: string
                  assignmentId:
                    type: integer
      404:
        description: No classes found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'No classes found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error fetching classes'
  post:
    summary: Create a new class
    description: Creates a new class with provided details.
    operationId: createClass
    security:
      - bearerAuth: []
    tags:
      - Class
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              classTitle:
                type: string
              classDescription:
                type: string
              classRecordedLink:
                type: string
              assignmentId:
                type: integer
    responses:
      201:
        description: Class created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Class created successfully'
      500:
        description: Class creation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error occurred while creating the class'
                error:
                  type: string
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Unauthorized request'
/class/{id}:
  put:
    summary: Update a class by ID
    description: Updates the information of a class by ID.
    operationId: updateClass
    security:
      - bearerAuth: []
    tags:
      - Class
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the class to update
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              classTitle:
                type: string
              classDescription:
                type: string
              classRecordedLink:
                type: string
              assignmentId:
                type: integer
    responses:
      200:
        description: Class updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Class updated successfully'
      404:
        description: Class not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Class not found'
      500:
        description: Error updating class
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error updating class'
                error:
                  type: string
  delete:
    summary: Delete a class by ID
    description: Deletes a class by ID.
    operationId: deleteClass
    security:
      - bearerAuth: []
    tags:
      - Class
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the class to delete
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Class deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Class deleted successfully'
      404:
        description: Class not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Class not found'
      500:
        description: Error deleting class
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error deleting class'
                error:
                  type: string