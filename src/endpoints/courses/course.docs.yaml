/course:
  get:
    summary: Get all courses
    description: Retrieves a list of all course
    tags:
      - Course
    responses:
      200:
        description: List of all courses
        content:
          application/json:
            schema:
              type: object
              properties:
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      courseName:
                        type: string
                        example: 'Basic of Python'
                      courseDesc:
                        type: string
                        example: 'The course provides basics of Python'
                      courseCategoryId:
                        type: integer
                        example: 1
        
      404:
        description: No courses found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'No courses found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Internal Server Error'

  post:
    summary: Create a new course
    description: Creates a new course with provided details.
    operationId: createCourse
    security:
      - bearerAuth: []
    tags:
      - Course
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              courseName:
                type: string
                example: 'Basic of python'
              courseDesc:
                type: string
                example: 'the course provides basic of python'
              courseCategoryId:
                type: integer
                example: 1
    
    responses:
      201:
        description: course created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'course created successfully'
      500:
        description: Course creation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Error occurred while creating the course"
                error:
                  type: string

      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Unauthorized request    
                                    

/course/{id}:
  put:
    summary: Update a course by ID
    description: Updates the information of course by ID.
    operationId: updateCourse
    security:
      - bearerAuth: []
    tags:
      - Course
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the course to update
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              courseName:
                type: string
                example: 'Updated Python Basics'
              courseDesc:
                type: string
                example: 'Updated description for the Python Basics course'
              courseCategoryId:
                type: integer
                example: 2
        
    responses:
      200:
        description: Course updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course updated successfully'
      
      404:
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error updating course'
                error:
                  type: string


  delete:
    summary: Delete a course by ID
    description: Deletes a course by ID.
    operationId: deleteCourse
    security:
      - bearerAuth: []
    tags:
      - Course
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the course to delete
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Course deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course deleted successfully'
      404:
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error deleting course'
                error:
                  type: string


  get:
    summary: Get a course by ID
    tags:
      - Course
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the course
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Course details
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    courseName:
                      type: string
                      example: 'Basic of Python'
                    courseDesc:
                      type: string
                      example: 'The course provides basics of Python'
                    courseCategoryId:
                      type: integer
                      example: 1
                      
      404:
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error fetching course'
                error:
                  type: string