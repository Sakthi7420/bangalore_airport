/createcourse:
  post:
    summary: Create a new course
    tags:
      - course
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              courseName:
                type: string
                example: 'Basic of python'
              courseDesc:
                type: string
                example: 'the course provides basic of python'
              courseCategoryId:
                type: integer
                example: 1
              courseInstructorId:
                type: ineger
                example: 1
            required:
              - courseName
              - courseDesc
              - courseCategoryId
              - courseInstructorId
    responses:
      '201':
        description: course created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'course created successfully'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      msg:
                        type: string
                        example: 'courseName is required'
                    properties:
                      msg:
                        type: string
                        example: 'courseDesc is required'
                    properties:
                      msg:
                        type: integer
                        example: 'courseCategoryId is required'
                    properties:
                      msg:
                        type: integer
                        example: 'courseInstructorId is required'
                    
/getcourses:
  get:
    summary: Get all courses
    tags:
      - course
    responses:
      '200':
        description: List of all courses
        content:
          application/json:
            schema:
              type: object
              properties:
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      courseName:
                        type: string
                        example: 'Basic of Python'
                      courseDesc:
                        type: string
                        example: 'The course provides basics of Python'
                      courseCategoryId:
                        type: integer
                        example: 1
                      courseInstructorId:
                        type: integer
                        example: 1
      '404':
        description: No courses found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'No courses found'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Internal Server Error'


/getcourse/{id}:
  get:
    summary: Get a course by ID
    tags:
      - course
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the course
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: Course details
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    courseName:
                      type: string
                      example: 'Basic of Python'
                    courseDesc:
                      type: string
                      example: 'The course provides basics of Python'
                    courseCategoryId:
                      type: integer
                      example: 1
                    courseInstructorId:
                      type: integer
                      example: 1
      '404':
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error fetching course'

/updatecourse/{id}:
  put:
    summary: Update a course by ID
    tags:
      - course
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the course to update
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              courseName:
                type: string
                example: 'Updated Python Basics'
              courseDesc:
                type: string
                example: 'Updated description for the Python Basics course'
              courseCategoryId:
                type: integer
                example: 2
              courseInstructorId:
                type: integer
                example: 2
            required:
              - courseName
              - courseDesc
              - courseCategoryId
              - courseInstructorId
    responses:
      '200':
        description: Course updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course updated successfully'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      msg:
                        type: string
                        example: 'courseName is required'
                    properties:
                      msg:
                        type: string
                        example: 'courseDesc is required'
                    properties:
                      msg:
                        type: integer
                        example: 'courseCategoryId is required'
                    properties:
                      msg:
                        type: integer
                        example: 'courseInstructorId is required'
      '404':
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error updating course'

/deletecourse/{id}:
  delete:
    summary: Delete a course by ID
    tags:
      - course
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the course to delete
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: Course deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course deleted successfully'
      '404':
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error deleting course'



