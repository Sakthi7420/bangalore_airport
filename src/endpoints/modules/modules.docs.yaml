/modules:
  get:
    summary: Get all modules
    description: Retrieves a list of all modules, including course and creator information.
    tags:
      - Module
    responses:
      200:
        description: List of all modules
        content:
          application/json:
            schema:
              type: object
              properties:
                modules:
                  type: array
                  items:
                    type: object
                    properties:
                      moduleName:
                        type: string
                        example: 'Introduction to Node.js'
                      moduleDescription:
                        type: string
                        example: 'The module provides an introduction to Node.js and its features.'
                      sequence:
                        type: integer
                        example: 1
                      course:
                        type: object
                        properties:
                          courseName:
                            type: string
                            example: 'Node.js Basics'
                      creator:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: 'John'
                          lastName:
                            type: string
                            example: 'Doe'
      404:
        description: No modules found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'No modules found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Internal Server Error'

  post:
    summary: Create a new module
    description: Creates a new module with provided details.
    operationId: createModule
    security:
      - bearerAuth: []
    tags:
      - Module
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              courseId:
                type: integer
                example: 1
              moduleName:
                type: string
                example: 'Advanced Node.js'
              moduleDescription:
                type: string
                example: 'In-depth study of Node.js features and modules.'
              createdBy:
                type: integer
                example: 1
    responses:
      201:
        description: Module created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Module created successfully'
                newModule:
                  type: object
                  properties:
                    moduleName:
                      type: string
                      example: 'Advanced Node.js'
                    sequence:
                      type: integer
                      example: 2
      400:
        description: Missing required fields
        content:
          application/json:
            schema:
              type: object
              properties:
                errorCode:
                  type: string
                  example: 'invalid-request'
                message:
                  type: string
                  example: 'Missing required fields'
      404:
        description: Course not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Course not found'
      500:
        description: Module creation error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error occurred while creating the module'
                error:
                  type: string

/modules/{id}:
  put:
    summary: Update a module by ID
    description: Updates the information of a module by ID.
    operationId: updateModule
    security:
      - bearerAuth: []
    tags:
      - Module
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the module to update
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              moduleName:
                type: string
                example: 'Updated Node.js Basics'
              moduleDescription:
                type: string
                example: 'Updated description for the Node.js Basics module'
              updatedBy:
                type: integer
                example: 2
    responses:
      200:
        description: Module updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Module updated successfully'
      404:
        description: Module not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Module not found'
      500:
        description: Error updating module
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error updating module'
                error:
                  type: string

  delete:
    summary: Delete a module by ID
    description: Deletes a module by ID.
    operationId: deleteModule
    security:
      - bearerAuth: []
    tags:
      - Module
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the module to delete
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Module deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Module deleted successfully'
      404:
        description: Module not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Module not found'
      500:
        description: Error deleting module
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error deleting module'
                error:
                  type: string

  get:
    summary: Get a module by ID
    description: Retrieves details of a module by ID.
    operationId: getModule
    tags:
      - Module
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the module
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Module details
        content:
          application/json:
            schema:
              type: object
              properties:
                module:
                  type: object
                  properties:
                    moduleName:
                      type: string
                      example: 'Introduction to Node.js'
                    moduleDescription:
                      type: string
                      example: 'This module covers the basics of Node.js.'
                    sequence:
                      type: integer
                      example: 1
                    course:
                      type: object
                      properties:
                        courseName:
                          type: string
                          example: 'Node.js Basics'
                    creator:
                      type: object
                      properties:
                        firstName:
                          type: string
                          example: 'John'
                        lastName:
                          type: string
                          example: 'Doe'
      404:
        description: Module not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Module not found'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Error fetching module'
                error:
                  type: string
